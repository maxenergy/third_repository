#include "utils.h"

#define CASE(VALUE) \
    case VALUE: \
    return #VALUE \


std::string videoFormat2String(VIDEO_FORMAT_E videoFormat) {
    switch (videoFormat) {
    CASE(VIDEO_FORMAT_LINEAR);
    CASE(VIDEO_FORMAT_TILE_64x16);
    CASE(VIDEO_FORMAT_TILE_16x8);
    CASE(VIDEO_FORMAT_LINEAR_DISCRETE);
    CASE(VIDEO_FORMAT_BUTT);
    }
    return "unknow";
}

std::string pixelFormat2String(PIXEL_FORMAT_E pixelFormat) {
    switch (pixelFormat) {
    CASE(PIXEL_FORMAT_RGB_555);
    CASE(PIXEL_FORMAT_RGB_444);
    CASE(PIXEL_FORMAT_RGB_565);
    CASE(PIXEL_FORMAT_RGB_888);
    CASE(PIXEL_FORMAT_BGR_444);
    CASE(PIXEL_FORMAT_BGR_555);
    CASE(PIXEL_FORMAT_BGR_565);
    CASE(PIXEL_FORMAT_BGR_888);
    CASE(PIXEL_FORMAT_ARGB_1555);
    CASE(PIXEL_FORMAT_ARGB_4444);
    CASE(PIXEL_FORMAT_ARGB_8565);
    CASE(PIXEL_FORMAT_ARGB_8888);
    CASE(PIXEL_FORMAT_ARGB_2BPP);
    CASE(PIXEL_FORMAT_ABGR_1555);
    CASE(PIXEL_FORMAT_ABGR_4444);
    CASE(PIXEL_FORMAT_ABGR_8565);
    CASE(PIXEL_FORMAT_ABGR_8888);
    CASE(PIXEL_FORMAT_RGB_BAYER_8BPP);
    CASE(PIXEL_FORMAT_RGB_BAYER_10BPP);
    CASE(PIXEL_FORMAT_RGB_BAYER_12BPP);
    CASE(PIXEL_FORMAT_RGB_BAYER_14BPP);
    CASE(PIXEL_FORMAT_RGB_BAYER_16BPP);
    CASE(PIXEL_FORMAT_YVU_PLANAR_422);
    CASE(PIXEL_FORMAT_YVU_PLANAR_420);
    CASE(PIXEL_FORMAT_YVU_PLANAR_444);
    CASE(PIXEL_FORMAT_YVU_SEMIPLANAR_422);
    CASE(PIXEL_FORMAT_YVU_SEMIPLANAR_420);
    CASE(PIXEL_FORMAT_YVU_SEMIPLANAR_444);
    CASE(PIXEL_FORMAT_YUV_SEMIPLANAR_422);
    CASE(PIXEL_FORMAT_YUV_SEMIPLANAR_420);
    CASE(PIXEL_FORMAT_YUV_SEMIPLANAR_444);
    CASE(PIXEL_FORMAT_UYVY_PACKAGE_422);
    CASE(PIXEL_FORMAT_YUYV_PACKAGE_422);
    CASE(PIXEL_FORMAT_VYUY_PACKAGE_422);
    CASE(PIXEL_FORMAT_YUV_400);
    CASE(PIXEL_FORMAT_UV_420);
    CASE(PIXEL_FORMAT_BGR_888_PLANAR);
    CASE(PIXEL_FORMAT_HSV_888_PACKAGE);
    CASE(PIXEL_FORMAT_HSV_888_PLANAR);
    CASE(PIXEL_FORMAT_LAB_888_PACKAGE);
    CASE(PIXEL_FORMAT_LAB_888_PLANAR);
    CASE(PIXEL_FORMAT_S8C1);
    CASE(PIXEL_FORMAT_S8C2_PACKAGE);
    CASE(PIXEL_FORMAT_S8C2_PLANAR);
    CASE(PIXEL_FORMAT_S16C1);
    CASE(PIXEL_FORMAT_U8C1);
    CASE(PIXEL_FORMAT_U16C1);
    CASE(PIXEL_FORMAT_S32C1);
    CASE(PIXEL_FORMAT_U32C1);
    CASE(PIXEL_FORMAT_U64C1);
    CASE(PIXEL_FORMAT_S64C1);
    CASE(PIXEL_FORMAT_BUTT);
    }
    return "unknow";
}
